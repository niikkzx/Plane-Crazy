
local PixelsFrame = game.Players.LocalPlayer.PlayerGui.MainGui.PaintFrame.GridHolder.Grid
local Arts = game.Players.LocalPlayer.PlayerGui.MainGui.ArtFrame.Frames
local blackFrameId = "be707b14-770a-4747-8259-17eecd99cc2c"
-- Controls

local Buttons = Instance.new("ScreenGui")
local D = Instance.new("TextButton")
local S = Instance.new("TextButton")
local W = Instance.new("TextButton")
local A = Instance.new("TextButton")


-- SnakeConfig
local snake = {x = math.random(1,32),y = math.random(1,32)}
local lenght = 1
local segments = {snake}
local snake_dir = {x=0,y=0}
local food = {x = math.random(1,32),y = math.random(1,32)}
local dirs = {dW=1,dS=1,dA=1,dD=1}
-- Time
time_,time_step = 0,0.1



local function draw(x,y,color)

	if not PixelsFrame:FindFirstChild(x+(y*32)) then return end
	PixelsFrame:FindFirstChild(x+(y*32)).BackgroundColor3 = color or Color3.new(1,1,1)
end

local function fill(color)
	for i,v in pairs(PixelsFrame:GetChildren()) do
		if v:IsA("TextButton") then
			v.BackgroundColor3 = color or Color3.new()
		end
	end
end



local function to_hex(color: Color3): string
	return string.format("#%02X%02X%02X", color.R * 0xFF,
		color.G * 0xFF, color.B * 0xFF)
end

print(string.lower(to_hex(Color3.fromRGB(0,0,0))))



function GetId()
	local artsFrame = Arts:GetChildren()
	for i,v in pairs(artsFrame) do
		if v:IsA("Frame") then
			if v.Name ~= "Frame" then
				if v.Name ~= blackFrameId then
					return v.Name
				end
			end
		end
	end
end

function Delete(id)
	local args = {
		[1] = id,
	}

	game:GetService("ReplicatedStorage").Remotes.DeleteArt:FireServer(unpack(args))
end

function Async(id)
	local args = {
		[1] = id,
		[2] = workspace.Plots:FindFirstChild(game.Players.LocalPlayer.Name).Easels:FindFirstChild("2"),
		[3] = "NotForSale",
		[4] = "Starter Frame",
		[5] = "NotForSale",
		[6] = "None"
	}

	game:GetService("ReplicatedStorage").Remotes.ToggleArt:FireServer(unpack(args))
end

function Post(tabela)
	local args = {
		[1] = {
			["FrameColor"] = "ffffff",
			["Name"] = "SnakeGame",
			["Cells"] = tabela,
			["Frame"] = "Starter Frame",
			["Textures"] = {},
		}
	}

	game:GetService("ReplicatedStorage").Remotes.CreateArt:InvokeServer(unpack(args))
end

--- Controls



Buttons.Name = "Buttons"
Buttons.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

D.Name = "D"
D.Parent = Buttons
D.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
D.Position = UDim2.new(0.839857638, 0, 0.636904776, 0)
D.Size = UDim2.new(0, 52, 0, 50)
D.Text = "D"
D.TextColor3 = Color3.fromRGB(255, 255, 255)
D.TextScaled = true

S.Name = "S"
S.Parent = Buttons
S.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
S.Position = UDim2.new(0.793594301, 0, 0.736111104, 0)
S.Size = UDim2.new(0, 52, 0, 50)
S.Text = "S"
S.TextColor3 = Color3.fromRGB(255, 255, 255)
S.TextScaled = true


W.Name = "W"
W.Parent = Buttons
W.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
W.Position = UDim2.new(0.793594301, 0, 0.537698388, 0)
W.Size = UDim2.new(0, 52, 0, 50)
W.Text = "W"
W.TextColor3 = Color3.fromRGB(255, 255, 255)
W.TextScaled = true

A.Name = "A"
A.Parent = Buttons
A.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
A.Position = UDim2.new(0.747330964, 0, 0.636904776, 0)
A.Size = UDim2.new(0, 52, 0, 50)
A.Text = "A"
A.TextColor3 = Color3.fromRGB(255, 255, 255)
A.TextScaled = true


W.MouseButton1Click:Connect(function()
	if dirs.dW == 1 then
		snake_dir = {x = 0,y = -1}
		dirs = {dW=1,dS=0,dA=1,dD=1}
	end
	
end)
S.MouseButton1Click:Connect(function()
	if dirs.dS == 1 then
		snake_dir = {x = 0,y = 1}
		 dirs = {dW=0,dS=1,dA=1,dD=1}
	end


end)
A.MouseButton1Click:Connect(function()
	
	if dirs.dA == 1 then
		snake_dir = {x = -1,y = 0}
		dirs = {dW=1,dS=1,dA=1,dD=0}
	end
end)
D.MouseButton1Click:Connect(function()

	if dirs.dD == 1 then
		snake_dir = {x = 1,y = 0}
		dirs = {dW=1,dS=1,dA=0,dD=1}
	end
end)

--Movement Controller
local function reset()
	snake = {x = math.random(1,32),y = math.random(1,32)}
	food = {x = math.random(1,32),y = math.random(1,32)}
	lenght = 1
	segments = {snake}
	snake_dir = {x=0,y=0}
	
	dirs = {dW=1,dS=1,dA=1,dD=1}
end

local function self_eat(set)
	table.remove(set,#set)
	for i,v in pairs(set) do
		if snake.x == v.x and v.y == snake.y then
			return true
		end 
	end
	
	return false
end

while wait(5) do
	fill()
	
	local self_eating = self_eat(table.clone(segments))

	
	
	if self_eating == true then
		reset()
	elseif snake.y < 1 then
		reset()
	elseif  snake.y > 32 then
		reset()
	elseif  snake.x < 1 then
		reset()
	elseif snake.x > 32 then
		reset()
	
	end
	
	
	
	
	if snake.x == food.x and food.y == snake.y then
		food = {x = math.random(1,32),y = math.random(1,32)}
		lenght += 1
	end
	
	draw(food.x,food.y,Color3.new(1,0,0))
	for i,v in pairs(segments) do
		draw(v.x,v.y,Color3.new(0,1,0))
	end
	
	local tableFinal = {}
	
	for i = 1,1024,1 do
		table.insert(tableFinal,string.lower(to_hex(PixelsFrame:FindFirstChild(i).BackgroundColor3)))
	end
	
	print(tableFinal)
	
	Post(tableFinal)
	Async(GetId())
	

	time_now = tick()
	if (time_now - time_) > time_step then
		time_ = time_now
		local new = {x = snake.x,y= snake.y}
		new.y += snake_dir.y
		new.x += snake_dir.x
		snake = new
		table.insert(segments,snake)
		
		for i = 1 ,#segments - lenght do
			table.remove(segments,i)
			
		end

	end
	
	wait(3)
	
	Async(blackFrameId)
	Delete(GetId())
end
