
local PixelsFrame = game.Players.LocalPlayer.PlayerGui.MainGui.PaintFrame.GridHolder.Grid
-- Controls

local Buttons = Instance.new("ScreenGui")
local D = Instance.new("TextButton")
local S = Instance.new("TextButton")
local W = Instance.new("TextButton")
local A = Instance.new("TextButton")


-- SnakeConfig
local snake = {x = math.random(1,32),y = math.random(1,32)}
local lenght = 1
local segments = {snake}
local snake_dir = {x=0,y=0}
local food = {x = math.random(1,32),y = math.random(1,32)}
local dirs = {dW=1,dS=1,dA=1,dD=1}
-- Time
time_,time_step = 0,0.1


function GeneratePixels()
	size = 10
	local a = 0
	for x=1,1024 do
		a = a +1

		fr = Instance.new("Frame")
		fr.Position = UDim2.new(0,a*size,0,math.floor((x-1)/32)*size)
		fr.Size = UDim2.new(0,size,0,size)
		fr.BackgroundColor3 = Color3.new(0,0,0)
		fr.BorderSizePixel = 0
		fr.Name = x
		fr.Parent = PixelsFrame
		fr.ZIndex = 3
		if a == 32 then
			a = 0
		end
	end
end

local function draw(x,y,color)

	if not PixelsFrame:FindFirstChild(x+(y*32)) then return end
	PixelsFrame:FindFirstChild(x+(y*32)).BackgroundColor3 = color or Color3.new(1,1,1)
end

local function fill(color)
	for i,v in pairs(PixelsFrame:GetChildren()) do
		if v:IsA("Frame") or v:IsA("TextButton'") then
			v.BackgroundColor3 = color or Color3.new()
		end
	end
end


--- Controls



Buttons.Name = "Buttons"
Buttons.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

D.Name = "D"
D.Parent = Buttons
D.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
D.Position = UDim2.new(0.839857638, 0, 0.636904776, 0)
D.Size = UDim2.new(0, 52, 0, 50)
D.Text = "D"
D.TextColor3 = Color3.fromRGB(255, 255, 255)
D.TextScaled = true

S.Name = "S"
S.Parent = Buttons
S.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
S.Position = UDim2.new(0.793594301, 0, 0.736111104, 0)
S.Size = UDim2.new(0, 52, 0, 50)
S.Text = "S"
S.TextColor3 = Color3.fromRGB(255, 255, 255)
S.TextScaled = true


W.Name = "W"
W.Parent = Buttons
W.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
W.Position = UDim2.new(0.793594301, 0, 0.537698388, 0)
W.Size = UDim2.new(0, 52, 0, 50)
W.Text = "W"
W.TextColor3 = Color3.fromRGB(255, 255, 255)
W.TextScaled = true

A.Name = "A"
A.Parent = Buttons
A.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
A.Position = UDim2.new(0.747330964, 0, 0.636904776, 0)
A.Size = UDim2.new(0, 52, 0, 50)
A.Text = "A"
A.TextColor3 = Color3.fromRGB(255, 255, 255)
A.TextScaled = true


W.MouseButton1Click:Connect(function()
	if dirs.dW == 1 then
		snake_dir = {x = 0,y = -1}
		dirs = {dW=1,dS=0,dA=1,dD=1}
	end
	
end)
S.MouseButton1Click:Connect(function()
	if dirs.dS == 1 then
		snake_dir = {x = 0,y = 1}
		 dirs = {dW=0,dS=1,dA=1,dD=1}
	end


end)
A.MouseButton1Click:Connect(function()
	
	if dirs.dA == 1 then
		snake_dir = {x = -1,y = 0}
		dirs = {dW=1,dS=1,dA=1,dD=0}
	end
end)
D.MouseButton1Click:Connect(function()

	if dirs.dD == 1 then
		snake_dir = {x = 1,y = 0}
		dirs = {dW=1,dS=1,dA=0,dD=1}
	end
end)

--Movement Controller
local function reset()
	snake = {x = math.random(1,32),y = math.random(1,32)}
	food = {x = math.random(1,32),y = math.random(1,32)}
	lenght = 1
	segments = {snake}
	snake_dir = {x=0,y=0}
	dirs = {dW=1,dS=1,dA=1,dD=1}
end

local function self_eat(set)
	table.remove(set,#set)
	for i,v in pairs(set) do
		if snake.x == v.x and v.y == snake.y then
			return true
		end 
	end
	
	return false
end
GeneratePixels()
while wait() do
	fill()
	
	local self_eating = self_eat(table.clone(segments))

	
	
	if self_eating == true then
		reset()
	elseif snake.y < 1 then
		reset()
	elseif  snake.y > 32 then
		reset()
	elseif  snake.x < 1 then
		reset()
	elseif snake.x > 32 then
		reset()
	
	end
	
	
	
	
	if snake.x == food.x and food.y == snake.y then
		food = {x = math.random(1,32),y = math.random(1,32)}
		lenght += 1
	end
	
	draw(food.x,food.y,Color3.new(1,0,0))
	for i,v in pairs(segments) do
		draw(v.x,v.y,Color3.new(0,1,0))
	end

	time_now = tick()
	if (time_now - time_) > time_step then
		time_ = time_now
		local new = {x = snake.x,y= snake.y}
		new.y += snake_dir.y
		new.x += snake_dir.x
		snake = new
		table.insert(segments,snake)
		
		for i = 1 ,#segments - lenght do
			table.remove(segments,i)
			
		end

		
		
		
	end

end
